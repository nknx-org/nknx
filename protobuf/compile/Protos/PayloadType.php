<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protobuf/protos/transaction.proto

namespace Protos;

use UnexpectedValueException;

/**
 * Protobuf type <code>protos.PayloadType</code>
 */
class PayloadType
{
    /**
     * Generated from protobuf enum <code>COINBASE_TYPE = 0;</code>
     */
    const COINBASE_TYPE = 0;
    /**
     * Generated from protobuf enum <code>TRANSFER_ASSET_TYPE = 1;</code>
     */
    const TRANSFER_ASSET_TYPE = 1;
    /**
     * Generated from protobuf enum <code>SIG_CHAIN_TXN_TYPE = 2;</code>
     */
    const SIG_CHAIN_TXN_TYPE = 2;
    /**
     * Generated from protobuf enum <code>REGISTER_NAME_TYPE = 3;</code>
     */
    const REGISTER_NAME_TYPE = 3;
    /**
     * Generated from protobuf enum <code>TRANSFER_NAME_TYPE = 4;</code>
     */
    const TRANSFER_NAME_TYPE = 4;
    /**
     * Generated from protobuf enum <code>DELETE_NAME_TYPE = 5;</code>
     */
    const DELETE_NAME_TYPE = 5;
    /**
     * Generated from protobuf enum <code>SUBSCRIBE_TYPE = 6;</code>
     */
    const SUBSCRIBE_TYPE = 6;
    /**
     * Generated from protobuf enum <code>UNSUBSCRIBE_TYPE = 7;</code>
     */
    const UNSUBSCRIBE_TYPE = 7;
    /**
     * Generated from protobuf enum <code>GENERATE_ID_TYPE = 8;</code>
     */
    const GENERATE_ID_TYPE = 8;
    /**
     * Generated from protobuf enum <code>NANO_PAY_TYPE = 9;</code>
     */
    const NANO_PAY_TYPE = 9;
    /**
     * Generated from protobuf enum <code>ISSUE_ASSET_TYPE = 10;</code>
     */
    const ISSUE_ASSET_TYPE = 10;

    private static $valueToName = [
        self::COINBASE_TYPE => 'COINBASE_TYPE',
        self::TRANSFER_ASSET_TYPE => 'TRANSFER_ASSET_TYPE',
        self::SIG_CHAIN_TXN_TYPE => 'SIG_CHAIN_TXN_TYPE',
        self::REGISTER_NAME_TYPE => 'REGISTER_NAME_TYPE',
        self::TRANSFER_NAME_TYPE => 'TRANSFER_NAME_TYPE',
        self::DELETE_NAME_TYPE => 'DELETE_NAME_TYPE',
        self::SUBSCRIBE_TYPE => 'SUBSCRIBE_TYPE',
        self::UNSUBSCRIBE_TYPE => 'UNSUBSCRIBE_TYPE',
        self::GENERATE_ID_TYPE => 'GENERATE_ID_TYPE',
        self::NANO_PAY_TYPE => 'NANO_PAY_TYPE',
        self::ISSUE_ASSET_TYPE => 'ISSUE_ASSET_TYPE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

